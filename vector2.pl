use strict;
use warnings;
use POSIX qw(round ceil nearbyint);
use Data::Dumper;
use FindBin;
use lib "$FindBin::Bin";
use Vector2D;
# new and set and print
my ($v0, $v1, $v2) = (Vector2D->new(1,2), Vector2D->new(3, 4));
$v2 = ($v0 + $v1)->print('v0 + v1');
$v2 = ($v2 - $v1)->print('v2 - v1');
Vector2D->print($v1, 'v1');
$v2->print('v0');
$v1->set(10,20)->print('v1 after set');
Vector2D->set($v1, -1, -2)->print('v1 after static set');
Vector2D->zero($v1)->print('static zeroed v1');
$v1->set(99,99)->print('v1 reste')->zero->print('instance zeroed v1');
Vector2D->clone($v0)->print('static clone of v0');
$v1->set(4, 4)->clone->print('cloned v1 instance');
printf "v1 dot v2 static = %f\n", Vector2D->dot($v1, $v2);
printf "v1 dot v2 instances = %f\n", $v1->print('v1 before dot ')->dot($v2->print('v2 before dot'));
($v1 * $v2)->print('v1 * v2');
#  print Dumper @{$v0->{elems}};
# print Dumper $v2;
